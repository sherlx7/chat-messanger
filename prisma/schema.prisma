// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //stores id of all conversations this user is a part of
  conversationIds String[] @db.ObjectId
  //the r/s is defined by mapping conversationsIds in an entity
  //to id in another entity
  conversations Conversation[] @relation(fields:[conversationIds], references:[id])

  seenMessageIds String[] @db.ObjectId
  seenMessages Message[] @relation("Seen", fields:[SeenMessageIds], references:[id])

  accounts Account[]
  messages Message[]
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_typep String?
  scope String?
  id_token String? @db.String
  session_state String?

  //user is mapped to userId field in account, and referring to id in User
  //onDelete:instruction given if relation is deleted
  user User @relation(fields:[userId], references:[id], onDelete:Cascade)

  //rule:combination of provider and providerAccountId must be unique
  @@unique([provider, providerAccountId])
}